{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"K57A5","rootPoint":{"objectClass":"CGPoint","x":360,"y":2637.5},"lineColorHex":"#FF8C00","children":{"0":{"objectClass":"MindNode","ID":"Q3Q5U","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"51D71","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"5U445","lineColorHex":"#DC306C","text":"getElementByID"},"1":{"objectClass":"MindNode","ID":"8ZC7P","lineColorHex":"#DC306C","text":"getElementByClassName"},"2":{"objectClass":"MindNode","ID":"01L4C","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"L118P","lineColorHex":"#DC306C","text":"如果页面中只有一个该元素 返回的还是伪数组的形式 "},"1":{"objectClass":"MindNode","ID":"912C6","lineColorHex":"#DC306C","text":"如果页面中没有这个元素 返回的是空的伪数组的形式"},"2":{"objectClass":"MindNode","ID":"4U541","lineColorHex":"#DC306C","text":"其父元素必须是指定的单个元素"},"objectClass":"NSArray"},"text":"getElementByTagName\n获取元素对象的集合 以伪数组形式存储"},"3":{"objectClass":"MindNode","ID":"ID3R8","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"60LNG","lineColorHex":"#DC306C","text":"里面的选择器需要加符号 .class  #id"},"objectClass":"NSArray"},"text":"querySelect\n返回指定选择器的第一个元素对象 "},"4":{"objectClass":"MindNode","ID":"S9X32","lineColorHex":"#DC306C","text":"querySeclectAll\n返回指定选择器的所有元素对象集合"},"objectClass":"NSArray"},"text":"获取元素的方式"},"1":{"objectClass":"MindNode","ID":"FBW16","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"M7ZBO","lineColorHex":"#DC306C","text":"事件源——事件被触发的对象"},"1":{"objectClass":"MindNode","ID":"O9CQU","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"UQY0R","lineColorHex":"#DC306C","text":"鼠标事件\t触发条件              \nonclick\t鼠标点击左键触发\nonmouseover\t鼠标经过触发\nonmouseout\t鼠标离开触发\nonfocus\t获得鼠标焦点触发\nonblur\t失去鼠标焦点触发\nonmousemove\t鼠标移动触发\nonmouseup\t鼠标弹起触发\nonmousedown\t鼠标按下触发"},"objectClass":"NSArray"},"text":"事件类型——操作类型"},"2":{"objectClass":"MindNode","ID":"Y773X","lineColorHex":"#DC306C","text":"事件处理程序——所触发的函数"},"3":{"objectClass":"MindNode","ID":"166WG","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"YPW16","lineColorHex":"#DC306C","text":"获取事件源——>绑定事件——>添加事件处理程序"},"objectClass":"NSArray"},"text":"执行事件步骤："},"objectClass":"NSArray"},"text":"事件三要素"},"2":{"objectClass":"MindNode","ID":"P9W7I","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"BYGC5","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"NJK7Y","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"HK2I5","lineColorHex":"#DC306C","text":"从起始位置到终止位置的内容，但它去除Html标签，同时空格和换行也会去掉"},"1":{"objectClass":"MindNode","ID":"04GTG","lineColorHex":"#DC306C","text":"innerText不识别HTML标签"},"2":{"objectClass":"MindNode","ID":"Q2K89","lineColorHex":"#DC306C","text":"可读写的，可以获取元素里面的内容"},"objectClass":"NSArray"},"text":"element.innerText","shrink":true,"summaries":{"0":{"objectClass":"NodeSummary","ID":"48776","text":"innerText与innerHTML区分","offset":{"objectClass":"CGPoint","x":0,"y":0}},"objectClass":"NSArray"}},"1":{"objectClass":"MindNode","ID":"48776","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"U1H14","lineColorHex":"#DC306C","text":"从起始位置到终止位置的全部内容，包括Html标签，同时保留空格和换行\n"},"1":{"objectClass":"MindNode","ID":"IJF5J","lineColorHex":"#DC306C","text":"能识别HTML标签"},"2":{"objectClass":"MindNode","ID":"E8H0Y","lineColorHex":"#DC306C","text":"可读写的，可以获取元素里面的内容"},"objectClass":"NSArray"},"text":"element.innerHTML","shrink":true},"objectClass":"NSArray"},"text":"1.修改元素内容"},"1":{"objectClass":"MindNode","ID":"3620S","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"685X8","lineColorHex":"#DC306C","text":"常用属性：\n`type/value/checked/selected/disabled禁用"},"1":{"objectClass":"MindNode","ID":"U7ND6","lineColorHex":"#DC306C","text":"实例：密码点击隐藏/显示","style2":{"objectClass":"NSDictionary","color":"#FF8C00"}},"objectClass":"NSArray"},"text":"2.修改表单属性"},"2":{"objectClass":"MindNode","ID":"53DCX","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"D376F","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"0933K","lineColorHex":"#DC306C","text":"如果样式比较少或者功能简单的情况下使用"},"objectClass":"NSArray"},"text":"名.style——行内样式操作"},"1":{"objectClass":"MindNode","ID":"P24V2","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"MK21N","lineColorHex":"#DC306C","text":"适合样式比较多的情况下使用 修改了元素的类名"},"objectClass":"NSArray"},"text":"名.className——类名样式操作"},"2":{"objectClass":"MindNode","ID":"C9633","lineColorHex":"#DC306C","text":"⚠️注意：\n1.JS 里面的样式采取驼峰命名法 比如 fontSize、 backgroundColor \n2.JS 修改 style 样式操作，产生的是行内样式，权重比较高"},"3":{"objectClass":"MindNode","ID":"MVD23","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"K2E9O","lineColorHex":"#DC306C","text":"关闭悬浮二维码"},"1":{"objectClass":"MindNode","ID":"574HS","lineColorHex":"#DC306C","text":"循环精灵图"},"objectClass":"NSArray"},"text":"实例：","style2":{"objectClass":"NSDictionary","color":"#FF8C00"}},"objectClass":"NSArray"},"text":"3.修改样式属性"},"objectClass":"NSArray"},"text":"操作元素"},"3":{"objectClass":"MindNode","ID":"U2P67","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"L85VU","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"C7L89","lineColorHex":"#DC306C","text":"element.属性——获取内置属性值"},"1":{"objectClass":"MindNode","ID":"2701X","lineColorHex":"#DC306C","text":"element.getAttribute('属性') ——获取自定义的属性"},"objectClass":"NSArray"},"text":"获取属性值"},"1":{"objectClass":"MindNode","ID":"AGQ7T","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"N6Y2A","lineColorHex":"#DC306C","text":"element.属性 = '值'——更改内置属性"},"1":{"objectClass":"MindNode","ID":"H1SEJ","lineColorHex":"#DC306C","text":"element.setAttribute('属性', '值') ——更改自定义的属性"},"objectClass":"NSArray"},"text":"设置元素属性值"},"2":{"objectClass":"MindNode","ID":"F2WDX","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"0O647","lineColorHex":"#DC306C","text":"element.removeAttribute('属性') ——移除自定义的属性（标准）"},"objectClass":"NSArray"},"text":"移除元素属性值"},"3":{"objectClass":"MindNode","ID":"DR5ZY","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"6453L","lineColorHex":"#DC306C","text":"命名方式：`data-开头`"},"1":{"objectClass":"MindNode","ID":"S3C9L","lineColorHex":"#DC306C","text":"dataset——存放了所有以data开头的自定义属性"},"objectClass":"NSArray"},"text":"H5自定义元素属性"},"4":{"objectClass":"MindNode","ID":"F131M","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"0I366","lineColorHex":"#DC306C","text":"① Tab栏切换有2个大的模块\n② 模块选项卡，点击某一个，当前底色会是红色，其余不变（排他思想）修改类名的方式\n③ 模块内容，会跟随上面的选项卡变化， 所以下面模块交化气到点击事件里面。\n④ 规律：下面的模块显示内容和上面的选项卡一对应\n⑤ 核心思路：给上面的tab_list 里面的所有小1添加自定义属性，属性值从0开始编号。\n6. 当我们点在tab_list里的小i，让tab_con里对应序号的内容显示，其余隐藏"},"objectClass":"NSArray"},"text":"❗️实例——tab栏切换","style2":{"objectClass":"NSDictionary","color":"#FF8C00"}},"objectClass":"NSArray"},"text":"属性操作"},"4":{"objectClass":"MindNode","ID":"9S745","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"FR49P","lineColorHex":"#DC306C","text":"节点概念"},"1":{"objectClass":"MindNode","ID":"PW3SQ","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"GTUNS","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"MRI88","lineColorHex":"#DC306C","text":"⚠️注意：得到的离元素最近的父级节点（亲爸爸），如果找不到就返回null","style2":{"objectClass":"NSDictionary","color":"#FF0000"}},"objectClass":"NSArray"},"text":"获取父级节点node.parentNode"},"1":{"objectClass":"MindNode","ID":"2J5MH","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"O5W7M","lineColorHex":"#DC306C","text":"parentNode.childNodes (标准)\n返回包含指定节点的子节点的集合，该集合为即时更新的集合 包含的子节点包含元素节点、文本节点等等"},"1":{"objectClass":"MindNode","ID":"80310","lineColorHex":"#DC306C","text":"parentNode.children (非标准)\n得到所有的子元素节点","style2":{"objectClass":"NSDictionary","color":"#9ACD32"}},"2":{"objectClass":"MindNode","ID":"ZPKRR","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"7CT75","lineColorHex":"#DC306C","text":"parentNode.firstChild\n返回第一个子节点，找不到返回null,不管是文本节点还是元素节点都能找到","style2":{"objectClass":"NSDictionary","color":"#000000"}},"1":{"objectClass":"MindNode","ID":"1K1M2","lineColorHex":"#DC306C","text":"parentNode.firstElementChild\n返回第一个子元素节点，找不到返回null,只返回元素节点（IE9以上才支持）"},"objectClass":"NSArray"},"text":"获取第一个节点","summaries":{"0":{"objectClass":"NodeSummary","ID":"IY35A","text":"实际开发中的办法： parentNode.children[0]/parentNode.children[parentNode.children.length - 1]","offset":{"objectClass":"CGPoint","x":0,"y":0}},"objectClass":"NSArray"}},"3":{"objectClass":"MindNode","ID":"IY35A","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"24R0L","lineColorHex":"#DC306C","text":"parentNode.lastChild\n返回最后一个子节点，找不到返回null,不管是文本节点还是元素节点都能找到","style2":{"objectClass":"NSDictionary","color":"#000000"}},"1":{"objectClass":"MindNode","ID":"EGQ5V","lineColorHex":"#DC306C","text":"parentNode.lastElementChild\n返回最后一个子元素节点，找不到返回null,只返回元素节点（IE9以上才支持）"},"objectClass":"NSArray"},"text":"获取最后一个节点"},"objectClass":"NSArray"},"text":"获取子级节点"},"objectClass":"NSArray"},"text":"获取节点"},"2":{"objectClass":"MindNode","ID":"05470","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"T65Q3","lineColorHex":"#DC306C","text":"document.createElement('tagName')\n这个方法创建由tagName指定的 HTML 元素，因为这些元素原先不存在，是根据我们的需求动态生成的，所以也称为动态创建元素节点。"},"objectClass":"NSArray"},"text":"创建节点"},"3":{"objectClass":"MindNode","ID":"E3I7E","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"RI727","lineColorHex":"#DC306C","text":"\nnode.insertBefore(child, 指定元素位置);"},"1":{"objectClass":"MindNode","ID":"6OLJX","lineColorHex":"#DC306C","text":"node.appendChild(child);\n追加元素，是在指定父节点的子节点的末尾添加。"},"objectClass":"NSArray"},"text":"增加节点"},"4":{"objectClass":"MindNode","ID":"XT0LC","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"3NE1S","lineColorHex":"#DC306C","text":"node.removeChild(child);\n从DOM中删除一个子节点，返回删除的节点"},"objectClass":"NSArray"},"text":"删除节点"},"5":{"objectClass":"MindNode","ID":"YG806","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"Q63HG","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"E3598","lineColorHex":"#DC306C","text":"nav导航栏中有ul和li，li下面又有ul和li，第二层ul和li在鼠标移上去的时候才显示\n导航栏里面的li都要有鼠标经过的效果，所以需要循环注册"},"1":{"objectClass":"MindNode","ID":"JV489","lineColorHex":"#DC306C","text":"核心原理：当鼠标经过li 的时候，孩子的ul 和li 样式显示，当鼠标离开，则隐藏","style2":{"objectClass":"NSDictionary","color":"#007AFF"}},"objectClass":"NSArray"},"text":"获取节点：下拉菜单显示"},"1":{"objectClass":"MindNode","ID":"R4541","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"7Q4Y9","lineColorHex":"#DC306C","text":"1. 核心思路：点击按钮之后，就动态创建一个1i，添加到ul里面。","style2":{"objectClass":"NSDictionary","color":"#007AFF"}},"1":{"objectClass":"MindNode","ID":"YLM12","lineColorHex":"#DC306C","text":"2. 创建1i的同时 ，把文本域里面的值通过innerHTML赋值给li\n3. 如果想要新的留言后面显示就用appendChild 如果想要前面显示就用insertBefore(child,指定位置)\n4.删除元素 \n当把文本域的内容幅值给 li 的时候，多添加一个删除的链接，\n循环把所有的链接获取过来，当我们点击一个链接的时候，删除的是当前a标签链接的li \n⚠️注意：阻止链接跳转需要添加javascript:void(0);或者 javascript:;"},"objectClass":"NSArray"},"text":"增加/删除节点：简易留言板"},"objectClass":"NSArray"},"text":"案例","style2":{"objectClass":"NSDictionary","color":"#FF8C00"}},"objectClass":"NSArray"},"text":"DOM树节点"},"5":{"objectClass":"MindNode","ID":"RPX0L","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"87EGD","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"SWX3W","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"5O57B","lineColorHex":"#DC306C","text":"页面加载时不受影响\n页面在生成时有一个输入流的状态。在页面加载时这个状态是自动打开的，这时内容会从上至下添加内容，页面在加载时会从上到下将内容加载到页面上\n在这个时候，document.write()方法会按照正常的顺序被加载，但我们不能准确控制加载的位置，只能根据write()方法调用的位置使其内容放入页面大概的位置。\n这时，document.write()方法只是简单的写入内容，不会对页面进行重绘。"},"1":{"objectClass":"MindNode","ID":"0518T","lineColorHex":"#DC306C","text":"页面加载完成之后会重绘\n此时会自动的运行document.close()方法，停止页面加载阶段，而我们在进行单击或者其他事件进行调用时，页面已经加载完成，这时再使用document.write()方法会重新开始一个新的输入流，从而会进行重绘页面。","style2":{"objectClass":"NSDictionary","color":"#9ACD32"}},"objectClass":"NSArray"},"text":"❗️关于doucment.write()造成重绘","style2":{"objectClass":"NSDictionary","color":"#FF0000"}},"objectClass":"NSArray"},"text":"document.write()\n文档流执行完毕之后，会导致页面全部重绘"},"1":{"objectClass":"MindNode","ID":"IDNP5","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"1IC4B","lineColorHex":"#DC306C","text":"不会导致页面全部重绘\n拼接字符串的效率低\n创建多个元素效率更高，（不要拼接字符串，采取数组形式拼接），结构稍显复杂"},"objectClass":"NSArray"},"text":"document.innerHTML()"},"2":{"objectClass":"MindNode","ID":"0XL2X","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"25V64","lineColorHex":"#DC306C","text":"缺点：创建多个元素效率稍低，但是结构更清晰"},"objectClass":"NSArray"},"text":"document.createElement()"},"objectClass":"NSArray"},"text":"三种动态创建元素区别"},"objectClass":"NSArray"},"text":"1 DOM文档对象"},"1":{"objectClass":"MindNode","ID":"3PJ6J","lineColorHex":"#BF58F5","text":"2 Dom事件高级"},"objectClass":"NSArray"},"text":"JS-DOM"},"ID":"6T6S0","style":600}